<% content_for :head do %>
 <style>
   p.slot {cursor: hand; cursor: pointer;}
   p.slot:hover {background-color: #D6F5FF;}
 </style>
<% end %>

<h3 class="pagination-centered" style="color: #c52000"><%= "Editing #{@bracket.name} Bracket" %></h3>

<%= render @bracket %>

<%= form_for @bracket do |f| %>
    <dl id="bracket-dl" class="dl-horizontal">
      <dt><%= f.label :name, "Bracket Name", :class => 'bracket-label' %></dt>
      <dd><%= f.text_field :name %></dd>

      <dt><%= f.label :tie_breaker, :class => 'bracket-label' do %>
            <abbr title="Points in final game">Tie Breaker</abbr>
        <% end %></dt>
      <dd><%= f.text_field :tie_breaker, :size => 4 %></dd>
    </dl>
    <div class="form-actions">
      <%= f.submit "Done", :class => 'btn btn-primary' %>
    </div>
<% end %>

<script type="text/javascript">
  var game_transitions = []; //hash of game id => [next game_id, slot (1 or 2)]
  var game_to_pick = []; //game_id => this bracket pick id
  <% Game.all.each do |g| %>
    game_to_pick[<%= g.id %>] = <%= @bracket.picks.find_by_game_id(g.id).id %>;
    <% unless g.next_game.blank? %>
      game_transitions[<%= g.id %>] = [<%= g.next_game.id %>, <%= g.next_slot %>];
    <% end %>
  <% end %>

  var champ_game_id = <%= Game.championship.id %>;

  $(document).ready(function() {
      $('#tie-breaker-static').hide();
  });


    $('.slot').click(function () {
        var parent_node = $(this).offsetParent();

        var current_game_id = parseInt(parent_node[0].id.replace('match', ''));
        var transition = game_transitions[current_game_id];

        var team_id = -1;
        var classList = $(this).attr('class').split(/\s+/);
        $.each( classList, function(index, item){
            if (item.substring(0, 4) == 'team') {
                team_id = parseInt(item.replace('team',''));
            }
        });


        //championship
        if(transition === undefined) {

            var slot_node = $(".square1");

            slot_node.html($(this).html());

            //remove any old teamID classes
            var defunctClassList = slot_node.attr('class').split(/\s+/);
            $.each( defunctClassList, function(index, item){
                if (item.substring(0, 4) == 'team') {
                    slot_node.removeClass(item);
                }
            });

            //add this teamID
            slot_node.addClass("team" + team_id);
        }
        else {




          var next_game_id = transition[0];
          var next_slot = transition[1];

          var slot_node = $("div#match" + next_game_id + " > .slot" + next_slot);


            //get team in next slot
            var defunct_team_id = -1;
            var defunctClassList = slot_node.attr('class').split(/\s+/);
            $.each( defunctClassList, function(index, item){
                if (item.substring(0, 4) == 'team') {
                    defunct_team_id = parseInt(item.replace('team',''));
                }
            });

            if(defunct_team_id > 0 && defunct_team_id != team_id) {
              clearSelection(current_game_id, next_game_id, defunct_team_id);
              clearChampionship(defunct_team_id);
            }



          slot_node.html($(this).html());
          slot_node.attr('class', 'slot slot' + next_slot + ' team' + team_id);
        }

        $.ajax({
            url: '/picks/' + game_to_pick[current_game_id],
            type: 'POST',
            data: { _method: 'PUT', pick: {team_id: team_id}}

        });


    });

    function clearSelection(prev_game_id, from_game_id, team_id) {
        var slot_node = $("div#match" + from_game_id + " > .team" + team_id);
        if(slot_node[0] === undefined) {
            return;

        }
        else {
            slot_node.html(' ');
            slot_node.removeClass("team" + team_id);

            $.ajax({
                url: '/picks/' + game_to_pick[prev_game_id],
                type: 'POST',
                data: { _method: 'PUT', pick: {team_id: -1}}

            });

            if(game_transitions[from_game_id] === undefined) {
                clearChampionship(team_id);
            }
            else {
              clearSelection(from_game_id, game_transitions[from_game_id][0], team_id);
            }
        }
    }

    function clearChampionship(team_id) {
        var champ_node = $("div#championship > div.box > p.team" + team_id);
        if(champ_node[0] === undefined) {
            return;
        }
        else {
            champ_node.html(' ');
            champ_node.removeClass("team" + team_id);

            $.ajax({
                url: '/picks/' + game_to_pick[champ_game_id],
                type: 'POST',
                data: { _method: 'PUT', pick: {team_id: -1}}

            });
        }
    }
</script>

